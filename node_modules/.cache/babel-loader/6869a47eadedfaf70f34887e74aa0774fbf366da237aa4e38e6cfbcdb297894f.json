{"ast":null,"code":"var _jsxFileName = \"/Users/nitin/Desktop/nitin/Fundinvest/questomer/src/pages/CommunicationsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Paper, List, ListItem as MuiListItem, ListItemText, ListItemAvatar, Avatar, TextField, IconButton, Divider, Grid as MuiGrid, Card, CardContent, Badge, InputAdornment } from '@mui/material';\nimport { Send as SendIcon, Search as SearchIcon, Circle as CircleIcon } from '@mui/icons-material';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledGrid = styled(MuiGrid, {\n  shouldForwardProp: prop => !['item', 'xs', 'md', 'lg'].includes(prop)\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column'\n}));\n_c = StyledGrid;\nconst StyledListItem = styled(MuiListItem)(({\n  theme\n}) => ({\n  cursor: 'pointer'\n}));\n_c2 = StyledListItem;\nconst CommunicationsPage = () => {\n  _s();\n  // Demo data\n  const [contacts] = useState([{\n    id: '1',\n    name: 'John Smith',\n    company: 'Venture Partners',\n    avatar: 'VP',\n    lastMessage: 'Looking forward to our meeting tomorrow',\n    lastMessageTime: '10:30 AM',\n    unreadCount: 2,\n    online: true\n  }, {\n    id: '2',\n    name: 'Sarah Johnson',\n    company: 'Growth Capital Fund',\n    avatar: 'GC',\n    lastMessage: 'Could you share more details about your revenue model?',\n    lastMessageTime: 'Yesterday',\n    unreadCount: 0,\n    online: false\n  }, {\n    id: '3',\n    name: 'Michael Chen',\n    company: 'Impact Ventures',\n    avatar: 'IV',\n    lastMessage: \"Great presentation! Let's schedule a follow-up\",\n    lastMessageTime: 'Yesterday',\n    unreadCount: 1,\n    online: true\n  }]);\n  const [messages] = useState([{\n    id: '1',\n    senderId: '1',\n    text: \"Hi, I reviewed your pitch deck and I'm quite impressed with your approach.\",\n    timestamp: '10:00 AM',\n    isRead: true\n  }, {\n    id: '2',\n    senderId: 'me',\n    text: \"Thank you! We've been working hard on refining our strategy.\",\n    timestamp: '10:15 AM',\n    isRead: true\n  }, {\n    id: '3',\n    senderId: '1',\n    text: 'Looking forward to our meeting tomorrow',\n    timestamp: '10:30 AM',\n    isRead: false\n  }]);\n  const [selectedContact, setSelectedContact] = useState(contacts[0]);\n  const [newMessage, setNewMessage] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      // TODO: Implement send message logic\n      console.log('Sending message:', newMessage);\n      setNewMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 'calc(100vh - 100px)',\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(StyledGrid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(StyledGrid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              p: 2,\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              size: \"small\",\n              placeholder: \"Search conversations...\",\n              value: searchQuery,\n              onChange: e => setSearchQuery(e.target.value),\n              sx: {\n                mb: 2\n              },\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              sx: {\n                overflow: 'auto',\n                height: 'calc(100% - 120px)',\n                '&::-webkit-scrollbar': {\n                  width: '0.4em'\n                },\n                '&::-webkit-scrollbar-track': {\n                  background: '#f1f1f1'\n                },\n                '&::-webkit-scrollbar-thumb': {\n                  backgroundColor: '#888'\n                }\n              },\n              children: contacts.filter(contact => contact.name.toLowerCase().includes(searchQuery.toLowerCase()) || contact.company.toLowerCase().includes(searchQuery.toLowerCase())).map(contact => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(StyledListItem, {\n                  component: \"div\",\n                  onClick: () => setSelectedContact(contact),\n                  selected: (selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact.id) === contact.id,\n                  children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                    children: /*#__PURE__*/_jsxDEV(Badge, {\n                      overlap: \"circular\",\n                      anchorOrigin: {\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                      },\n                      variant: \"dot\",\n                      sx: {\n                        '& .MuiBadge-badge': {\n                          backgroundColor: contact.online ? '#44b700' : '#ccc'\n                        }\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Avatar, {\n                        sx: {\n                          bgcolor: 'primary.main'\n                        },\n                        children: contact.avatar\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        justifyContent: 'space-between'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle2\",\n                        children: contact.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        color: \"text.secondary\",\n                        children: contact.lastMessageTime\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 29\n                    }, this),\n                    secondary: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        justifyContent: 'space-between'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"text.secondary\",\n                        sx: {\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis',\n                          whiteSpace: 'nowrap',\n                          maxWidth: '180px'\n                        },\n                        children: contact.lastMessage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 31\n                      }, this), contact.unreadCount > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n                        badgeContent: contact.unreadCount,\n                        color: \"primary\",\n                        sx: {\n                          ml: 1\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 23\n                }, this)]\n              }, contact.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledGrid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        lg: 9,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              p: 2,\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: selectedContact ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  pb: 2,\n                  borderBottom: 1,\n                  borderColor: 'divider'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Badge, {\n                  overlap: \"circular\",\n                  anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                  },\n                  variant: \"dot\",\n                  sx: {\n                    '& .MuiBadge-badge': {\n                      backgroundColor: selectedContact.online ? '#44b700' : '#ccc'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      bgcolor: 'primary.main',\n                      mr: 2\n                    },\n                    children: selectedContact.avatar\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    children: selectedContact.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: selectedContact.company\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1,\n                  overflow: 'auto',\n                  my: 2,\n                  px: 2,\n                  '&::-webkit-scrollbar': {\n                    width: '0.4em'\n                  },\n                  '&::-webkit-scrollbar-track': {\n                    background: '#f1f1f1'\n                  },\n                  '&::-webkit-scrollbar-thumb': {\n                    backgroundColor: '#888'\n                  }\n                },\n                children: messages.map(message => /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: message.senderId === 'me' ? 'flex-end' : 'flex-start',\n                    mb: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    sx: {\n                      p: 2,\n                      backgroundColor: message.senderId === 'me' ? 'primary.main' : 'grey.100',\n                      color: message.senderId === 'me' ? 'white' : 'inherit',\n                      maxWidth: '70%'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      children: message.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      sx: {\n                        display: 'block',\n                        textAlign: 'right',\n                        mt: 0.5,\n                        opacity: 0.8\n                      },\n                      children: [message.timestamp, message.senderId === 'me' && /*#__PURE__*/_jsxDEV(CircleIcon, {\n                        sx: {\n                          ml: 0.5,\n                          fontSize: 12,\n                          color: message.isRead ? '#44b700' : 'inherit'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 25\n                  }, this)\n                }, message.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 1,\n                  pt: 2,\n                  borderTop: 1,\n                  borderColor: 'divider'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  multiline: true,\n                  maxRows: 4,\n                  placeholder: \"Type a message...\",\n                  value: newMessage,\n                  onChange: e => setNewMessage(e.target.value),\n                  onKeyPress: handleKeyPress,\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  onClick: handleSendMessage,\n                  disabled: !newMessage.trim(),\n                  children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"text.secondary\",\n                children: \"Select a conversation to start messaging\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(CommunicationsPage, \"lkQKljgdu7gJu9zCTG0xnOxLOfw=\");\n_c3 = CommunicationsPage;\nexport default CommunicationsPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledGrid\");\n$RefreshReg$(_c2, \"StyledListItem\");\n$RefreshReg$(_c3, \"CommunicationsPage\");","map":{"version":3,"names":["React","useState","Box","Typography","Paper","List","ListItem","MuiListItem","ListItemText","ListItemAvatar","Avatar","TextField","IconButton","Divider","Grid","MuiGrid","Card","CardContent","Badge","InputAdornment","Send","SendIcon","Search","SearchIcon","Circle","CircleIcon","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledGrid","shouldForwardProp","prop","includes","theme","display","flexDirection","_c","StyledListItem","cursor","_c2","CommunicationsPage","_s","contacts","id","name","company","avatar","lastMessage","lastMessageTime","unreadCount","online","messages","senderId","text","timestamp","isRead","selectedContact","setSelectedContact","newMessage","setNewMessage","searchQuery","setSearchQuery","handleSendMessage","trim","console","log","handleKeyPress","e","key","shiftKey","preventDefault","sx","height","p","children","container","spacing","item","xs","md","lg","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","size","placeholder","value","onChange","target","mb","InputProps","startAdornment","position","overflow","width","background","backgroundColor","filter","contact","toLowerCase","map","component","onClick","selected","overlap","anchorOrigin","vertical","horizontal","bgcolor","primary","justifyContent","color","secondary","textOverflow","whiteSpace","maxWidth","badgeContent","ml","alignItems","pb","borderBottom","borderColor","mr","flexGrow","my","px","message","textAlign","mt","opacity","fontSize","gap","pt","borderTop","multiline","maxRows","onKeyPress","disabled","_c3","$RefreshReg$"],"sources":["/Users/nitin/Desktop/nitin/Fundinvest/questomer/src/pages/CommunicationsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  List,\n  ListItem as MuiListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  TextField,\n  IconButton,\n  Divider,\n  Grid as MuiGrid,\n  Card,\n  CardContent,\n  Badge,\n  InputAdornment\n} from '@mui/material';\nimport {\n  Send as SendIcon,\n  Search as SearchIcon,\n  Circle as CircleIcon\n} from '@mui/icons-material';\nimport { styled } from '@mui/material/styles';\nimport type { Theme } from '@mui/material/styles';\nimport type { GridProps } from '@mui/material/Grid';\nimport type { ListItemButtonProps } from '@mui/material/ListItemButton';\n\ninterface Message {\n  id: string;\n  senderId: string;\n  text: string;\n  timestamp: string;\n  isRead: boolean;\n}\n\ninterface Contact {\n  id: string;\n  name: string;\n  company: string;\n  avatar: string;\n  lastMessage: string;\n  lastMessageTime: string;\n  unreadCount: number;\n  online: boolean;\n}\n\ntype StyledGridProps = GridProps & {\n  item?: boolean;\n  xs?: number | boolean;\n  md?: number | boolean;\n  lg?: number | boolean;\n};\n\nconst StyledGrid = styled(MuiGrid, {\n  shouldForwardProp: (prop) => !['item', 'xs', 'md', 'lg'].includes(prop as string)\n})<StyledGridProps>(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column'\n}));\n\nconst StyledListItem = styled(MuiListItem)<ListItemButtonProps>(({ theme }) => ({\n  cursor: 'pointer',\n}));\n\nconst CommunicationsPage: React.FC = () => {\n  // Demo data\n  const [contacts] = useState<Contact[]>([\n    {\n      id: '1',\n      name: 'John Smith',\n      company: 'Venture Partners',\n      avatar: 'VP',\n      lastMessage: 'Looking forward to our meeting tomorrow',\n      lastMessageTime: '10:30 AM',\n      unreadCount: 2,\n      online: true\n    },\n    {\n      id: '2',\n      name: 'Sarah Johnson',\n      company: 'Growth Capital Fund',\n      avatar: 'GC',\n      lastMessage: 'Could you share more details about your revenue model?',\n      lastMessageTime: 'Yesterday',\n      unreadCount: 0,\n      online: false\n    },\n    {\n      id: '3',\n      name: 'Michael Chen',\n      company: 'Impact Ventures',\n      avatar: 'IV',\n      lastMessage: \"Great presentation! Let's schedule a follow-up\",\n      lastMessageTime: 'Yesterday',\n      unreadCount: 1,\n      online: true\n    }\n  ]);\n\n  const [messages] = useState<Message[]>([\n    {\n      id: '1',\n      senderId: '1',\n      text: \"Hi, I reviewed your pitch deck and I'm quite impressed with your approach.\",\n      timestamp: '10:00 AM',\n      isRead: true\n    },\n    {\n      id: '2',\n      senderId: 'me',\n      text: \"Thank you! We've been working hard on refining our strategy.\",\n      timestamp: '10:15 AM',\n      isRead: true\n    },\n    {\n      id: '3',\n      senderId: '1',\n      text: 'Looking forward to our meeting tomorrow',\n      timestamp: '10:30 AM',\n      isRead: false\n    }\n  ]);\n\n  const [selectedContact, setSelectedContact] = useState<Contact | null>(contacts[0]);\n  const [newMessage, setNewMessage] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      // TODO: Implement send message logic\n      console.log('Sending message:', newMessage);\n      setNewMessage('');\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <Box sx={{ height: 'calc(100vh - 100px)', p: 3 }}>\n      <StyledGrid container spacing={2} sx={{ height: '100%' }}>\n        {/* Left sidebar - Contacts */}\n        <StyledGrid item xs={12} md={4} lg={3}>\n          <Card sx={{ height: '100%' }}>\n            <CardContent sx={{ p: 2, height: '100%' }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Messages\n              </Typography>\n              <TextField\n                fullWidth\n                size=\"small\"\n                placeholder=\"Search conversations...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                sx={{ mb: 2 }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <List sx={{ \n                overflow: 'auto', \n                height: 'calc(100% - 120px)',\n                '&::-webkit-scrollbar': {\n                  width: '0.4em'\n                },\n                '&::-webkit-scrollbar-track': {\n                  background: '#f1f1f1'\n                },\n                '&::-webkit-scrollbar-thumb': {\n                  backgroundColor: '#888'\n                }\n              }}>\n                {contacts\n                  .filter(contact => \n                    contact.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                    contact.company.toLowerCase().includes(searchQuery.toLowerCase())\n                  )\n                  .map((contact) => (\n                    <React.Fragment key={contact.id}>\n                      <StyledListItem \n                        component=\"div\"\n                        onClick={() => setSelectedContact(contact)}\n                        selected={selectedContact?.id === contact.id}\n                      >\n                        <ListItemAvatar>\n                          <Badge\n                            overlap=\"circular\"\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                            variant=\"dot\"\n                            sx={{\n                              '& .MuiBadge-badge': {\n                                backgroundColor: contact.online ? '#44b700' : '#ccc',\n                              },\n                            }}\n                          >\n                            <Avatar sx={{ bgcolor: 'primary.main' }}>\n                              {contact.avatar}\n                            </Avatar>\n                          </Badge>\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary={\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                              <Typography variant=\"subtitle2\">{contact.name}</Typography>\n                              <Typography variant=\"caption\" color=\"text.secondary\">\n                                {contact.lastMessageTime}\n                              </Typography>\n                            </Box>\n                          }\n                          secondary={\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                              <Typography\n                                variant=\"body2\"\n                                color=\"text.secondary\"\n                                sx={{\n                                  overflow: 'hidden',\n                                  textOverflow: 'ellipsis',\n                                  whiteSpace: 'nowrap',\n                                  maxWidth: '180px'\n                                }}\n                              >\n                                {contact.lastMessage}\n                              </Typography>\n                              {contact.unreadCount > 0 && (\n                                <Badge\n                                  badgeContent={contact.unreadCount}\n                                  color=\"primary\"\n                                  sx={{ ml: 1 }}\n                                />\n                              )}\n                            </Box>\n                          }\n                        />\n                      </StyledListItem>\n                      <Divider component=\"li\" />\n                    </React.Fragment>\n                  ))}\n              </List>\n            </CardContent>\n          </Card>\n        </StyledGrid>\n\n        {/* Right side - Chat */}\n        <StyledGrid item xs={12} md={8} lg={9}>\n          <Card sx={{ height: '100%' }}>\n            <CardContent sx={{ \n              p: 2, \n              height: '100%', \n              display: 'flex', \n              flexDirection: 'column'\n            }}>\n              {selectedContact ? (\n                <>\n                  {/* Chat Header */}\n                  <Box sx={{ \n                    display: 'flex', \n                    alignItems: 'center', \n                    pb: 2, \n                    borderBottom: 1,\n                    borderColor: 'divider'\n                  }}>\n                    <Badge\n                      overlap=\"circular\"\n                      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                      variant=\"dot\"\n                      sx={{\n                        '& .MuiBadge-badge': {\n                          backgroundColor: selectedContact.online ? '#44b700' : '#ccc',\n                        },\n                      }}\n                    >\n                      <Avatar sx={{ bgcolor: 'primary.main', mr: 2 }}>\n                        {selectedContact.avatar}\n                      </Avatar>\n                    </Badge>\n                    <Box>\n                      <Typography variant=\"subtitle1\">\n                        {selectedContact.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {selectedContact.company}\n                      </Typography>\n                    </Box>\n                  </Box>\n\n                  {/* Messages */}\n                  <Box sx={{ \n                    flexGrow: 1, \n                    overflow: 'auto',\n                    my: 2,\n                    px: 2,\n                    '&::-webkit-scrollbar': {\n                      width: '0.4em'\n                    },\n                    '&::-webkit-scrollbar-track': {\n                      background: '#f1f1f1'\n                    },\n                    '&::-webkit-scrollbar-thumb': {\n                      backgroundColor: '#888'\n                    }\n                  }}>\n                    {messages.map((message) => (\n                      <Box\n                        key={message.id}\n                        sx={{\n                          display: 'flex',\n                          justifyContent: message.senderId === 'me' ? 'flex-end' : 'flex-start',\n                          mb: 2\n                        }}\n                      >\n                        <Paper\n                          sx={{\n                            p: 2,\n                            backgroundColor: message.senderId === 'me' ? 'primary.main' : 'grey.100',\n                            color: message.senderId === 'me' ? 'white' : 'inherit',\n                            maxWidth: '70%'\n                          }}\n                        >\n                          <Typography variant=\"body1\">\n                            {message.text}\n                          </Typography>\n                          <Typography \n                            variant=\"caption\" \n                            sx={{ \n                              display: 'block',\n                              textAlign: 'right',\n                              mt: 0.5,\n                              opacity: 0.8\n                            }}\n                          >\n                            {message.timestamp}\n                            {message.senderId === 'me' && (\n                              <CircleIcon \n                                sx={{ \n                                  ml: 0.5, \n                                  fontSize: 12,\n                                  color: message.isRead ? '#44b700' : 'inherit'\n                                }} \n                              />\n                            )}\n                          </Typography>\n                        </Paper>\n                      </Box>\n                    ))}\n                  </Box>\n\n                  {/* Message Input */}\n                  <Box sx={{ \n                    display: 'flex', \n                    gap: 1,\n                    pt: 2,\n                    borderTop: 1,\n                    borderColor: 'divider'\n                  }}>\n                    <TextField\n                      fullWidth\n                      multiline\n                      maxRows={4}\n                      placeholder=\"Type a message...\"\n                      value={newMessage}\n                      onChange={(e) => setNewMessage(e.target.value)}\n                      onKeyPress={handleKeyPress}\n                      size=\"small\"\n                    />\n                    <IconButton \n                      color=\"primary\" \n                      onClick={handleSendMessage}\n                      disabled={!newMessage.trim()}\n                    >\n                      <SendIcon />\n                    </IconButton>\n                  </Box>\n                </>\n              ) : (\n                <Box sx={{ \n                  display: 'flex', \n                  alignItems: 'center', \n                  justifyContent: 'center',\n                  height: '100%'\n                }}>\n                  <Typography variant=\"h6\" color=\"text.secondary\">\n                    Select a conversation to start messaging\n                  </Typography>\n                </Box>\n              )}\n            </CardContent>\n          </Card>\n        </StyledGrid>\n      </StyledGrid>\n    </Box>\n  );\n};\n\nexport default CommunicationsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}