{"ast":null,"code":"// Mock startups data\nexport const mockStartups = [{\n  id: 'startup-1',\n  questId: 'Q-1234',\n  role: 'startup',\n  email: 'startup@example.com',\n  password: 'password123',\n  // In a real app, this would be hashed\n  name: 'Demo Startup',\n  phoneNumber: '555-1234',\n  linkedinProfile: 'linkedin.com/company/demo-startup',\n  startupName: 'Tech Innovators',\n  businessModel: 'SaaS',\n  headquarters: 'San Francisco, CA',\n  operationalRegions: ['North America', 'Europe'],\n  yearFounded: 2021,\n  industry: ['Software', 'AI'],\n  level: 'L1',\n  createdAt: new Date('2023-01-15')\n}];\n\n// Mock investors data\nexport const mockInvestors = [{\n  id: 'investor-1',\n  questId: 'Q-5678',\n  role: 'investor',\n  email: 'investor@example.com',\n  password: 'password123',\n  // In a real app, this would be hashed\n  name: 'Demo Investor',\n  phoneNumber: '555-5678',\n  linkedinProfile: 'linkedin.com/in/demo-investor',\n  investorType: 'Venture Capital',\n  industry: ['Software', 'FinTech', 'Healthcare'],\n  investmentStage: ['Seed', 'Series A'],\n  ticketSize: {\n    min: 250000,\n    max: 2000000\n  },\n  dealType: ['Equity', 'Convertible Note'],\n  geographicPreferences: ['North America', 'Europe'],\n  riskAppetite: 'Moderate',\n  level: 'L1',\n  createdAt: new Date('2023-02-20')\n}];\n\n// To make this a proper module\nexport {};","map":{"version":3,"names":["mockStartups","id","questId","role","email","password","name","phoneNumber","linkedinProfile","startupName","businessModel","headquarters","operationalRegions","yearFounded","industry","level","createdAt","Date","mockInvestors","investorType","investmentStage","ticketSize","min","max","dealType","geographicPreferences","riskAppetite"],"sources":["/Users/nitin/Desktop/nitin/Fundinvest/questomer/src/utils/mockData.ts"],"sourcesContent":["import { StartupUser, InvestorUser } from '../types';\n\n// Mock startups data\nexport const mockStartups: StartupUser[] = [\n  {\n    id: 'startup-1',\n    questId: 'Q-1234',\n    role: 'startup',\n    email: 'startup@example.com',\n    password: 'password123', // In a real app, this would be hashed\n    name: 'Demo Startup',\n    phoneNumber: '555-1234',\n    linkedinProfile: 'linkedin.com/company/demo-startup',\n    startupName: 'Tech Innovators',\n    businessModel: 'SaaS',\n    headquarters: 'San Francisco, CA',\n    operationalRegions: ['North America', 'Europe'],\n    yearFounded: 2021,\n    industry: ['Software', 'AI'],\n    level: 'L1',\n    createdAt: new Date('2023-01-15')\n  }\n];\n\n// Mock investors data\nexport const mockInvestors: InvestorUser[] = [\n  {\n    id: 'investor-1',\n    questId: 'Q-5678',\n    role: 'investor',\n    email: 'investor@example.com',\n    password: 'password123', // In a real app, this would be hashed\n    name: 'Demo Investor',\n    phoneNumber: '555-5678',\n    linkedinProfile: 'linkedin.com/in/demo-investor',\n    investorType: 'Venture Capital',\n    industry: ['Software', 'FinTech', 'Healthcare'],\n    investmentStage: ['Seed', 'Series A'],\n    ticketSize: { min: 250000, max: 2000000 },\n    dealType: ['Equity', 'Convertible Note'],\n    geographicPreferences: ['North America', 'Europe'],\n    riskAppetite: 'Moderate',\n    level: 'L1',\n    createdAt: new Date('2023-02-20')\n  }\n];\n\n// To make this a proper module\nexport {}; "],"mappings":"AAEA;AACA,OAAO,MAAMA,YAA2B,GAAG,CACzC;EACEC,EAAE,EAAE,WAAW;EACfC,OAAO,EAAE,QAAQ;EACjBC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,qBAAqB;EAC5BC,QAAQ,EAAE,aAAa;EAAE;EACzBC,IAAI,EAAE,cAAc;EACpBC,WAAW,EAAE,UAAU;EACvBC,eAAe,EAAE,mCAAmC;EACpDC,WAAW,EAAE,iBAAiB;EAC9BC,aAAa,EAAE,MAAM;EACrBC,YAAY,EAAE,mBAAmB;EACjCC,kBAAkB,EAAE,CAAC,eAAe,EAAE,QAAQ,CAAC;EAC/CC,WAAW,EAAE,IAAI;EACjBC,QAAQ,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC;EAC5BC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,IAAIC,IAAI,CAAC,YAAY;AAClC,CAAC,CACF;;AAED;AACA,OAAO,MAAMC,aAA6B,GAAG,CAC3C;EACEjB,EAAE,EAAE,YAAY;EAChBC,OAAO,EAAE,QAAQ;EACjBC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,sBAAsB;EAC7BC,QAAQ,EAAE,aAAa;EAAE;EACzBC,IAAI,EAAE,eAAe;EACrBC,WAAW,EAAE,UAAU;EACvBC,eAAe,EAAE,+BAA+B;EAChDW,YAAY,EAAE,iBAAiB;EAC/BL,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,YAAY,CAAC;EAC/CM,eAAe,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC;EACrCC,UAAU,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EACzCC,QAAQ,EAAE,CAAC,QAAQ,EAAE,kBAAkB,CAAC;EACxCC,qBAAqB,EAAE,CAAC,eAAe,EAAE,QAAQ,CAAC;EAClDC,YAAY,EAAE,UAAU;EACxBX,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,IAAIC,IAAI,CAAC,YAAY;AAClC,CAAC,CACF;;AAED;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}