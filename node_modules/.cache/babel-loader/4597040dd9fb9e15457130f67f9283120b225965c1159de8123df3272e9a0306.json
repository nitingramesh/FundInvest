{"ast":null,"code":"\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Identity = void 0;\nexports.useSlider = useSlider;\nexports.valueToPercent = valueToPercent;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _utils = require(\"@mui/utils\");\nvar _extractEventHandlers = _interopRequireDefault(require(\"@mui/utils/extractEventHandlers\"));\nvar _areArraysEqual = _interopRequireDefault(require(\"../utils/areArraysEqual\"));\nconst INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;\nfunction getNewValue(currentValue, step, direction, min, max) {\n  return direction === 1 ? Math.min(currentValue + step, max) : Math.max(currentValue - step, min);\n}\nfunction asc(a, b) {\n  return a - b;\n}\nfunction findClosest(values, currentValue) {\n  const {\n    index: closestIndex\n  } = values.reduce((acc, value, index) => {\n    const distance = Math.abs(currentValue - value);\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\n      return {\n        distance,\n        index\n      };\n    }\n    return acc;\n  }, null) ?? {};\n  return closestIndex;\n}\nfunction trackFinger(event, touchId) {\n  // The event is TouchEvent\n  if (touchId.current !== undefined && event.changedTouches) {\n    const touchEvent = event;\n    for (let i = 0; i < touchEvent.changedTouches.length; i += 1) {\n      const touch = touchEvent.changedTouches[i];\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n\n  // The event is MouseEvent\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\nfunction getDecimalPrecision(num) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split('e-');\n    const matissaDecimalPart = parts[0].split('.')[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\nfunction roundValueToStep(value, step, min) {\n  const nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\nfunction setValueIndex({\n  values,\n  newValue,\n  index\n}) {\n  const output = values.slice();\n  output[index] = newValue;\n  return output.sort(asc);\n}\nfunction focusThumb({\n  sliderRef,\n  activeIndex,\n  setActive\n}) {\n  const doc = (0, _utils.unstable_ownerDocument)(sliderRef.current);\n  if (!sliderRef.current?.contains(doc.activeElement) || Number(doc?.activeElement?.getAttribute('data-index')) !== activeIndex) {\n    sliderRef.current?.querySelector(`[type=\"range\"][data-index=\"${activeIndex}\"]`).focus();\n  }\n  if (setActive) {\n    setActive(activeIndex);\n  }\n}\nfunction areValuesEqual(newValue, oldValue) {\n  if (typeof newValue === 'number' && typeof oldValue === 'number') {\n    return newValue === oldValue;\n  }\n  if (typeof newValue === 'object' && typeof oldValue === 'object') {\n    return (0, _areArraysEqual.default)(newValue, oldValue);\n  }\n  return false;\n}\nconst axisProps = {\n  horizontal: {\n    offset: percent => ({\n      left: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  'horizontal-reverse': {\n    offset: percent => ({\n      right: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  vertical: {\n    offset: percent => ({\n      bottom: `${percent}%`\n    }),\n    leap: percent => ({\n      height: `${percent}%`\n    })\n  }\n};\nconst Identity = x => x;\n\n// TODO: remove support for Safari < 13.\n// https://caniuse.com/#search=touch-action\n//\n// Safari, on iOS, supports touch action since v13.\n// Over 80% of the iOS phones are compatible\n// in August 2020.\n// Utilizing the CSS.supports method to check if touch-action is supported.\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\n// touch-action will be supported\nexports.Identity = Identity;\nlet cachedSupportsTouchActionNone;\nfunction doesSupportTouchActionNone() {\n  if (cachedSupportsTouchActionNone === undefined) {\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\n    } else {\n      cachedSupportsTouchActionNone = true;\n    }\n  }\n  return cachedSupportsTouchActionNone;\n}\n/**\n *\n * Demos:\n *\n * - [Slider](https://mui.com/base-ui/react-slider/#hook)\n *\n * API:\n *\n * - [useSlider API](https://mui.com/base-ui/react-slider/hooks-api/#use-slider)\n */\nfunction useSlider(parameters) {\n  const {\n    'aria-labelledby': ariaLabelledby,\n    defaultValue,\n    disabled = false,\n    disableSwap = false,\n    isRtl = false,\n    marks: marksProp = false,\n    max = 100,\n    min = 0,\n    name,\n    onChange,\n    onChangeCommitted,\n    orientation = 'horizontal',\n    rootRef: ref,\n    scale = Identity,\n    step = 1,\n    shiftStep = 10,\n    tabIndex,\n    value: valueProp\n  } = parameters;\n  const touchId = React.useRef(undefined);\n  // We can't use the :active browser pseudo-classes.\n  // - The active state isn't triggered when clicking on the rail.\n  // - The active state isn't transferred when inversing a range slider.\n  const [active, setActive] = React.useState(-1);\n  const [open, setOpen] = React.useState(-1);\n  const [dragging, setDragging] = React.useState(false);\n  const moveCount = React.useRef(0);\n  // lastChangedValue is updated whenever onChange is triggered.\n  const lastChangedValue = React.useRef(null);\n  const [valueDerived, setValueState] = (0, _utils.unstable_useControlled)({\n    controlled: valueProp,\n    default: defaultValue ?? min,\n    name: 'Slider'\n  });\n  const handleChange = onChange && ((event, value, thumbIndex) => {\n    // Redefine target to allow name and value to be read.\n    // This allows seamless integration with the most popular form libraries.\n    // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n    // Clone the event to not override `target` of the original event.\n    const nativeEvent = event.nativeEvent || event;\n    // @ts-ignore The nativeEvent is function, not object\n    const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n    Object.defineProperty(clonedEvent, 'target', {\n      writable: true,\n      value: {\n        value,\n        name\n      }\n    });\n    lastChangedValue.current = value;\n    onChange(clonedEvent, value, thumbIndex);\n  });\n  const range = Array.isArray(valueDerived);\n  let values = range ? valueDerived.slice().sort(asc) : [valueDerived];\n  values = values.map(value => value == null ? min : (0, _utils.clamp)(value, min, max));\n  const marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_, index) => ({\n    value: min + step * index\n  })) : marksProp || [];\n  const marksValues = marks.map(mark => mark.value);\n  const [focusedThumbIndex, setFocusedThumbIndex] = React.useState(-1);\n  const sliderRef = React.useRef(null);\n  const handleRef = (0, _utils.unstable_useForkRef)(ref, sliderRef);\n  const createHandleHiddenInputFocus = otherHandlers => event => {\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    if ((0, _utils.unstable_isFocusVisible)(event.target)) {\n      setFocusedThumbIndex(index);\n    }\n    setOpen(index);\n    otherHandlers?.onFocus?.(event);\n  };\n  const createHandleHiddenInputBlur = otherHandlers => event => {\n    if (!(0, _utils.unstable_isFocusVisible)(event.target)) {\n      setFocusedThumbIndex(-1);\n    }\n    setOpen(-1);\n    otherHandlers?.onBlur?.(event);\n  };\n  const changeValue = (event, valueInput) => {\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    const value = values[index];\n    const marksIndex = marksValues.indexOf(value);\n    let newValue = valueInput;\n    if (marks && step == null) {\n      const maxMarksValue = marksValues[marksValues.length - 1];\n      if (newValue >= maxMarksValue) {\n        newValue = maxMarksValue;\n      } else if (newValue <= marksValues[0]) {\n        newValue = marksValues[0];\n      } else {\n        newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];\n      }\n    }\n    newValue = (0, _utils.clamp)(newValue, min, max);\n    if (range) {\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = (0, _utils.clamp)(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);\n      }\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index\n      });\n      let activeIndex = index;\n\n      // Potentially swap the index if needed.\n      if (!disableSwap) {\n        activeIndex = newValue.indexOf(previousValue);\n      }\n      focusThumb({\n        sliderRef,\n        activeIndex\n      });\n    }\n    setValueState(newValue);\n    setFocusedThumbIndex(index);\n    if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n      handleChange(event, newValue, index);\n    }\n    if (onChangeCommitted) {\n      onChangeCommitted(event, lastChangedValue.current ?? newValue);\n    }\n  };\n  const createHandleHiddenInputKeyDown = otherHandlers => event => {\n    if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'PageUp', 'PageDown', 'Home', 'End'].includes(event.key)) {\n      event.preventDefault();\n      const index = Number(event.currentTarget.getAttribute('data-index'));\n      const value = values[index];\n      let newValue = null;\n      // Keys actions that change the value by more than the most granular `step`\n      // value are only applied if the step not `null`.\n      // When step is `null`, the `marks` prop is used instead to define valid values.\n      if (step != null) {\n        const stepSize = event.shiftKey ? shiftStep : step;\n        switch (event.key) {\n          case 'ArrowUp':\n            newValue = getNewValue(value, stepSize, 1, min, max);\n            break;\n          case 'ArrowRight':\n            newValue = getNewValue(value, stepSize, isRtl ? -1 : 1, min, max);\n            break;\n          case 'ArrowDown':\n            newValue = getNewValue(value, stepSize, -1, min, max);\n            break;\n          case 'ArrowLeft':\n            newValue = getNewValue(value, stepSize, isRtl ? 1 : -1, min, max);\n            break;\n          case 'PageUp':\n            newValue = getNewValue(value, shiftStep, 1, min, max);\n            break;\n          case 'PageDown':\n            newValue = getNewValue(value, shiftStep, -1, min, max);\n            break;\n          case 'Home':\n            newValue = min;\n            break;\n          case 'End':\n            newValue = max;\n            break;\n          default:\n            break;\n        }\n      } else if (marks) {\n        const maxMarksValue = marksValues[marksValues.length - 1];\n        const currentMarkIndex = marksValues.indexOf(value);\n        const decrementKeys = [isRtl ? 'ArrowRight' : 'ArrowLeft', 'ArrowDown', 'PageDown', 'Home'];\n        const incrementKeys = [isRtl ? 'ArrowLeft' : 'ArrowRight', 'ArrowUp', 'PageUp', 'End'];\n        if (decrementKeys.includes(event.key)) {\n          if (currentMarkIndex === 0) {\n            newValue = marksValues[0];\n          } else {\n            newValue = marksValues[currentMarkIndex - 1];\n          }\n        } else if (incrementKeys.includes(event.key)) {\n          if (currentMarkIndex === marksValues.length - 1) {\n            newValue = maxMarksValue;\n          } else {\n            newValue = marksValues[currentMarkIndex + 1];\n          }\n        }\n      }\n      if (newValue != null) {\n        changeValue(event, newValue);\n      }\n    }\n    otherHandlers?.onKeyDown?.(event);\n  };\n  (0, _utils.unstable_useEnhancedEffect)(() => {\n    if (disabled && sliderRef.current.contains(document.activeElement)) {\n      // This is necessary because Firefox and Safari will keep focus\n      // on a disabled element:\n      // https://codesandbox.io/p/sandbox/mui-pr-22247-forked-h151h?file=/src/App.js\n      // @ts-ignore\n      document.activeElement?.blur();\n    }\n  }, [disabled]);\n  if (disabled && active !== -1) {\n    setActive(-1);\n  }\n  if (disabled && focusedThumbIndex !== -1) {\n    setFocusedThumbIndex(-1);\n  }\n  const createHandleHiddenInputChange = otherHandlers => event => {\n    otherHandlers.onChange?.(event);\n    // this handles value change by Pointer or Touch events\n    // @ts-ignore\n    changeValue(event, event.target.valueAsNumber);\n  };\n  const previousIndex = React.useRef(undefined);\n  let axis = orientation;\n  if (isRtl && orientation === 'horizontal') {\n    axis += '-reverse';\n  }\n  const getFingerNewValue = ({\n    finger,\n    move = false\n  }) => {\n    const {\n      current: slider\n    } = sliderRef;\n    const {\n      width,\n      height,\n      bottom,\n      left\n    } = slider.getBoundingClientRect();\n    let percent;\n    if (axis.startsWith('vertical')) {\n      percent = (bottom - finger.y) / height;\n    } else {\n      percent = (finger.x - left) / width;\n    }\n    if (axis.includes('-reverse')) {\n      percent = 1 - percent;\n    }\n    let newValue;\n    newValue = percentToValue(percent, min, max);\n    if (step) {\n      newValue = roundValueToStep(newValue, step, min);\n    } else {\n      const closestIndex = findClosest(marksValues, newValue);\n      newValue = marksValues[closestIndex];\n    }\n    newValue = (0, _utils.clamp)(newValue, min, max);\n    let activeIndex = 0;\n    if (range) {\n      if (!move) {\n        activeIndex = findClosest(values, newValue);\n      } else {\n        activeIndex = previousIndex.current;\n      }\n\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = (0, _utils.clamp)(newValue, values[activeIndex - 1] || -Infinity, values[activeIndex + 1] || Infinity);\n      }\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index: activeIndex\n      });\n\n      // Potentially swap the index if needed.\n      if (!(disableSwap && move)) {\n        activeIndex = newValue.indexOf(previousValue);\n        previousIndex.current = activeIndex;\n      }\n    }\n    return {\n      newValue,\n      activeIndex\n    };\n  };\n  const handleTouchMove = (0, _utils.unstable_useEventCallback)(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    if (!finger) {\n      return;\n    }\n    moveCount.current += 1;\n\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    // @ts-ignore buttons doesn't not exists on touch event\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    const {\n      newValue,\n      activeIndex\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    focusThumb({\n      sliderRef,\n      activeIndex,\n      setActive\n    });\n    setValueState(newValue);\n    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {\n      setDragging(true);\n    }\n    if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n      handleChange(nativeEvent, newValue, activeIndex);\n    }\n  });\n  const handleTouchEnd = (0, _utils.unstable_useEventCallback)(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    setDragging(false);\n    if (!finger) {\n      return;\n    }\n    const {\n      newValue\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    setActive(-1);\n    if (nativeEvent.type === 'touchend') {\n      setOpen(-1);\n    }\n    if (onChangeCommitted) {\n      onChangeCommitted(nativeEvent, lastChangedValue.current ?? newValue);\n    }\n    touchId.current = undefined;\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n  });\n  const handleTouchStart = (0, _utils.unstable_useEventCallback)(nativeEvent => {\n    if (disabled) {\n      return;\n    }\n    // If touch-action: none; is not supported we need to prevent the scroll manually.\n    if (!doesSupportTouchActionNone()) {\n      nativeEvent.preventDefault();\n    }\n    const touch = nativeEvent.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const finger = trackFinger(nativeEvent, touchId);\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n      if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n        handleChange(nativeEvent, newValue, activeIndex);\n      }\n    }\n    moveCount.current = 0;\n    const doc = (0, _utils.unstable_ownerDocument)(sliderRef.current);\n    doc.addEventListener('touchmove', handleTouchMove, {\n      passive: true\n    });\n    doc.addEventListener('touchend', handleTouchEnd, {\n      passive: true\n    });\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = (0, _utils.unstable_ownerDocument)(sliderRef.current);\n    doc.removeEventListener('mousemove', handleTouchMove);\n    doc.removeEventListener('mouseup', handleTouchEnd);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n  }, [handleTouchEnd, handleTouchMove]);\n  React.useEffect(() => {\n    const {\n      current: slider\n    } = sliderRef;\n    slider.addEventListener('touchstart', handleTouchStart, {\n      passive: doesSupportTouchActionNone()\n    });\n    return () => {\n      slider.removeEventListener('touchstart', handleTouchStart);\n      stopListening();\n    };\n  }, [stopListening, handleTouchStart]);\n  React.useEffect(() => {\n    if (disabled) {\n      stopListening();\n    }\n  }, [disabled, stopListening]);\n  const createHandleMouseDown = otherHandlers => event => {\n    otherHandlers.onMouseDown?.(event);\n    if (disabled) {\n      return;\n    }\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    const finger = trackFinger(event, touchId);\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n      if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n        handleChange(event, newValue, activeIndex);\n      }\n    }\n    moveCount.current = 0;\n    const doc = (0, _utils.unstable_ownerDocument)(sliderRef.current);\n    doc.addEventListener('mousemove', handleTouchMove, {\n      passive: true\n    });\n    doc.addEventListener('mouseup', handleTouchEnd);\n  };\n  const trackOffset = valueToPercent(range ? values[0] : min, min, max);\n  const trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;\n  const getRootProps = (externalProps = {}) => {\n    const externalHandlers = (0, _extractEventHandlers.default)(externalProps);\n    const ownEventHandlers = {\n      onMouseDown: createHandleMouseDown(externalHandlers || {})\n    };\n    const mergedEventHandlers = {\n      ...externalHandlers,\n      ...ownEventHandlers\n    };\n    return {\n      ...externalProps,\n      ref: handleRef,\n      ...mergedEventHandlers\n    };\n  };\n  const createHandleMouseOver = otherHandlers => event => {\n    otherHandlers.onMouseOver?.(event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    setOpen(index);\n  };\n  const createHandleMouseLeave = otherHandlers => event => {\n    otherHandlers.onMouseLeave?.(event);\n    setOpen(-1);\n  };\n  const getThumbProps = (externalProps = {}) => {\n    const externalHandlers = (0, _extractEventHandlers.default)(externalProps);\n    const ownEventHandlers = {\n      onMouseOver: createHandleMouseOver(externalHandlers || {}),\n      onMouseLeave: createHandleMouseLeave(externalHandlers || {})\n    };\n    return {\n      ...externalProps,\n      ...externalHandlers,\n      ...ownEventHandlers\n    };\n  };\n  const getThumbStyle = index => {\n    return {\n      // So the non active thumb doesn't show its label on hover.\n      pointerEvents: active !== -1 && active !== index ? 'none' : undefined\n    };\n  };\n  let cssWritingMode;\n  if (orientation === 'vertical') {\n    cssWritingMode = isRtl ? 'vertical-rl' : 'vertical-lr';\n  }\n  const getHiddenInputProps = (externalProps = {}) => {\n    const externalHandlers = (0, _extractEventHandlers.default)(externalProps);\n    const ownEventHandlers = {\n      onChange: createHandleHiddenInputChange(externalHandlers || {}),\n      onFocus: createHandleHiddenInputFocus(externalHandlers || {}),\n      onBlur: createHandleHiddenInputBlur(externalHandlers || {}),\n      onKeyDown: createHandleHiddenInputKeyDown(externalHandlers || {})\n    };\n    const mergedEventHandlers = {\n      ...externalHandlers,\n      ...ownEventHandlers\n    };\n    return {\n      tabIndex,\n      'aria-labelledby': ariaLabelledby,\n      'aria-orientation': orientation,\n      'aria-valuemax': scale(max),\n      'aria-valuemin': scale(min),\n      name,\n      type: 'range',\n      min: parameters.min,\n      max: parameters.max,\n      step: parameters.step === null && parameters.marks ? 'any' : parameters.step ?? undefined,\n      disabled,\n      ...externalProps,\n      ...mergedEventHandlers,\n      style: {\n        ..._utils.visuallyHidden,\n        direction: isRtl ? 'rtl' : 'ltr',\n        // So that VoiceOver's focus indicator matches the thumb's dimensions\n        width: '100%',\n        height: '100%',\n        writingMode: cssWritingMode\n      }\n    };\n  };\n  return {\n    active,\n    axis: axis,\n    axisProps,\n    dragging,\n    focusedThumbIndex,\n    getHiddenInputProps,\n    getRootProps,\n    getThumbProps,\n    marks: marks,\n    open,\n    range,\n    rootRef: handleRef,\n    trackLeap,\n    trackOffset,\n    values,\n    getThumbStyle\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","Object","defineProperty","exports","value","Identity","useSlider","valueToPercent","React","_utils","_extractEventHandlers","_areArraysEqual","INTENTIONAL_DRAG_COUNT_THRESHOLD","getNewValue","currentValue","step","direction","min","max","Math","asc","a","b","findClosest","values","index","closestIndex","reduce","acc","distance","abs","trackFinger","event","touchId","current","undefined","changedTouches","touchEvent","i","length","touch","identifier","x","clientX","y","clientY","percentToValue","percent","getDecimalPrecision","num","parts","toExponential","split","matissaDecimalPart","parseInt","decimalPart","toString","roundValueToStep","nearest","round","Number","toFixed","setValueIndex","newValue","output","slice","sort","focusThumb","sliderRef","activeIndex","setActive","doc","unstable_ownerDocument","contains","activeElement","getAttribute","querySelector","focus","areValuesEqual","oldValue","axisProps","horizontal","offset","left","leap","width","right","vertical","bottom","height","cachedSupportsTouchActionNone","doesSupportTouchActionNone","CSS","supports","parameters","ariaLabelledby","defaultValue","disabled","disableSwap","isRtl","marks","marksProp","name","onChange","onChangeCommitted","orientation","rootRef","ref","scale","shiftStep","tabIndex","valueProp","useRef","active","useState","open","setOpen","dragging","setDragging","moveCount","lastChangedValue","valueDerived","setValueState","unstable_useControlled","controlled","handleChange","thumbIndex","nativeEvent","clonedEvent","constructor","type","writable","range","Array","isArray","map","clamp","floor","_","marksValues","mark","focusedThumbIndex","setFocusedThumbIndex","handleRef","unstable_useForkRef","createHandleHiddenInputFocus","otherHandlers","currentTarget","unstable_isFocusVisible","target","onFocus","createHandleHiddenInputBlur","onBlur","changeValue","valueInput","marksIndex","indexOf","maxMarksValue","Infinity","previousValue","createHandleHiddenInputKeyDown","includes","key","preventDefault","stepSize","shiftKey","currentMarkIndex","decrementKeys","incrementKeys","onKeyDown","unstable_useEnhancedEffect","document","blur","createHandleHiddenInputChange","valueAsNumber","previousIndex","axis","getFingerNewValue","finger","move","slider","getBoundingClientRect","startsWith","handleTouchMove","unstable_useEventCallback","buttons","handleTouchEnd","stopListening","handleTouchStart","addEventListener","passive","useCallback","removeEventListener","useEffect","createHandleMouseDown","onMouseDown","defaultPrevented","button","trackOffset","trackLeap","getRootProps","externalProps","externalHandlers","ownEventHandlers","mergedEventHandlers","createHandleMouseOver","onMouseOver","createHandleMouseLeave","onMouseLeave","getThumbProps","getThumbStyle","pointerEvents","cssWritingMode","getHiddenInputProps","style","visuallyHidden","writingMode"],"sources":["/Users/nitin/Desktop/nitin/Fundinvest/questomer/node_modules/@mui/material/Slider/useSlider.js"],"sourcesContent":["\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Identity = void 0;\nexports.useSlider = useSlider;\nexports.valueToPercent = valueToPercent;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _utils = require(\"@mui/utils\");\nvar _extractEventHandlers = _interopRequireDefault(require(\"@mui/utils/extractEventHandlers\"));\nvar _areArraysEqual = _interopRequireDefault(require(\"../utils/areArraysEqual\"));\nconst INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;\nfunction getNewValue(currentValue, step, direction, min, max) {\n  return direction === 1 ? Math.min(currentValue + step, max) : Math.max(currentValue - step, min);\n}\nfunction asc(a, b) {\n  return a - b;\n}\nfunction findClosest(values, currentValue) {\n  const {\n    index: closestIndex\n  } = values.reduce((acc, value, index) => {\n    const distance = Math.abs(currentValue - value);\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\n      return {\n        distance,\n        index\n      };\n    }\n    return acc;\n  }, null) ?? {};\n  return closestIndex;\n}\nfunction trackFinger(event, touchId) {\n  // The event is TouchEvent\n  if (touchId.current !== undefined && event.changedTouches) {\n    const touchEvent = event;\n    for (let i = 0; i < touchEvent.changedTouches.length; i += 1) {\n      const touch = touchEvent.changedTouches[i];\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n\n  // The event is MouseEvent\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\nfunction getDecimalPrecision(num) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split('e-');\n    const matissaDecimalPart = parts[0].split('.')[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\nfunction roundValueToStep(value, step, min) {\n  const nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\nfunction setValueIndex({\n  values,\n  newValue,\n  index\n}) {\n  const output = values.slice();\n  output[index] = newValue;\n  return output.sort(asc);\n}\nfunction focusThumb({\n  sliderRef,\n  activeIndex,\n  setActive\n}) {\n  const doc = (0, _utils.unstable_ownerDocument)(sliderRef.current);\n  if (!sliderRef.current?.contains(doc.activeElement) || Number(doc?.activeElement?.getAttribute('data-index')) !== activeIndex) {\n    sliderRef.current?.querySelector(`[type=\"range\"][data-index=\"${activeIndex}\"]`).focus();\n  }\n  if (setActive) {\n    setActive(activeIndex);\n  }\n}\nfunction areValuesEqual(newValue, oldValue) {\n  if (typeof newValue === 'number' && typeof oldValue === 'number') {\n    return newValue === oldValue;\n  }\n  if (typeof newValue === 'object' && typeof oldValue === 'object') {\n    return (0, _areArraysEqual.default)(newValue, oldValue);\n  }\n  return false;\n}\nconst axisProps = {\n  horizontal: {\n    offset: percent => ({\n      left: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  'horizontal-reverse': {\n    offset: percent => ({\n      right: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  vertical: {\n    offset: percent => ({\n      bottom: `${percent}%`\n    }),\n    leap: percent => ({\n      height: `${percent}%`\n    })\n  }\n};\nconst Identity = x => x;\n\n// TODO: remove support for Safari < 13.\n// https://caniuse.com/#search=touch-action\n//\n// Safari, on iOS, supports touch action since v13.\n// Over 80% of the iOS phones are compatible\n// in August 2020.\n// Utilizing the CSS.supports method to check if touch-action is supported.\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\n// touch-action will be supported\nexports.Identity = Identity;\nlet cachedSupportsTouchActionNone;\nfunction doesSupportTouchActionNone() {\n  if (cachedSupportsTouchActionNone === undefined) {\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\n    } else {\n      cachedSupportsTouchActionNone = true;\n    }\n  }\n  return cachedSupportsTouchActionNone;\n}\n/**\n *\n * Demos:\n *\n * - [Slider](https://mui.com/base-ui/react-slider/#hook)\n *\n * API:\n *\n * - [useSlider API](https://mui.com/base-ui/react-slider/hooks-api/#use-slider)\n */\nfunction useSlider(parameters) {\n  const {\n    'aria-labelledby': ariaLabelledby,\n    defaultValue,\n    disabled = false,\n    disableSwap = false,\n    isRtl = false,\n    marks: marksProp = false,\n    max = 100,\n    min = 0,\n    name,\n    onChange,\n    onChangeCommitted,\n    orientation = 'horizontal',\n    rootRef: ref,\n    scale = Identity,\n    step = 1,\n    shiftStep = 10,\n    tabIndex,\n    value: valueProp\n  } = parameters;\n  const touchId = React.useRef(undefined);\n  // We can't use the :active browser pseudo-classes.\n  // - The active state isn't triggered when clicking on the rail.\n  // - The active state isn't transferred when inversing a range slider.\n  const [active, setActive] = React.useState(-1);\n  const [open, setOpen] = React.useState(-1);\n  const [dragging, setDragging] = React.useState(false);\n  const moveCount = React.useRef(0);\n  // lastChangedValue is updated whenever onChange is triggered.\n  const lastChangedValue = React.useRef(null);\n  const [valueDerived, setValueState] = (0, _utils.unstable_useControlled)({\n    controlled: valueProp,\n    default: defaultValue ?? min,\n    name: 'Slider'\n  });\n  const handleChange = onChange && ((event, value, thumbIndex) => {\n    // Redefine target to allow name and value to be read.\n    // This allows seamless integration with the most popular form libraries.\n    // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n    // Clone the event to not override `target` of the original event.\n    const nativeEvent = event.nativeEvent || event;\n    // @ts-ignore The nativeEvent is function, not object\n    const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n    Object.defineProperty(clonedEvent, 'target', {\n      writable: true,\n      value: {\n        value,\n        name\n      }\n    });\n    lastChangedValue.current = value;\n    onChange(clonedEvent, value, thumbIndex);\n  });\n  const range = Array.isArray(valueDerived);\n  let values = range ? valueDerived.slice().sort(asc) : [valueDerived];\n  values = values.map(value => value == null ? min : (0, _utils.clamp)(value, min, max));\n  const marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_, index) => ({\n    value: min + step * index\n  })) : marksProp || [];\n  const marksValues = marks.map(mark => mark.value);\n  const [focusedThumbIndex, setFocusedThumbIndex] = React.useState(-1);\n  const sliderRef = React.useRef(null);\n  const handleRef = (0, _utils.unstable_useForkRef)(ref, sliderRef);\n  const createHandleHiddenInputFocus = otherHandlers => event => {\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    if ((0, _utils.unstable_isFocusVisible)(event.target)) {\n      setFocusedThumbIndex(index);\n    }\n    setOpen(index);\n    otherHandlers?.onFocus?.(event);\n  };\n  const createHandleHiddenInputBlur = otherHandlers => event => {\n    if (!(0, _utils.unstable_isFocusVisible)(event.target)) {\n      setFocusedThumbIndex(-1);\n    }\n    setOpen(-1);\n    otherHandlers?.onBlur?.(event);\n  };\n  const changeValue = (event, valueInput) => {\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    const value = values[index];\n    const marksIndex = marksValues.indexOf(value);\n    let newValue = valueInput;\n    if (marks && step == null) {\n      const maxMarksValue = marksValues[marksValues.length - 1];\n      if (newValue >= maxMarksValue) {\n        newValue = maxMarksValue;\n      } else if (newValue <= marksValues[0]) {\n        newValue = marksValues[0];\n      } else {\n        newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];\n      }\n    }\n    newValue = (0, _utils.clamp)(newValue, min, max);\n    if (range) {\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = (0, _utils.clamp)(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);\n      }\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index\n      });\n      let activeIndex = index;\n\n      // Potentially swap the index if needed.\n      if (!disableSwap) {\n        activeIndex = newValue.indexOf(previousValue);\n      }\n      focusThumb({\n        sliderRef,\n        activeIndex\n      });\n    }\n    setValueState(newValue);\n    setFocusedThumbIndex(index);\n    if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n      handleChange(event, newValue, index);\n    }\n    if (onChangeCommitted) {\n      onChangeCommitted(event, lastChangedValue.current ?? newValue);\n    }\n  };\n  const createHandleHiddenInputKeyDown = otherHandlers => event => {\n    if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'PageUp', 'PageDown', 'Home', 'End'].includes(event.key)) {\n      event.preventDefault();\n      const index = Number(event.currentTarget.getAttribute('data-index'));\n      const value = values[index];\n      let newValue = null;\n      // Keys actions that change the value by more than the most granular `step`\n      // value are only applied if the step not `null`.\n      // When step is `null`, the `marks` prop is used instead to define valid values.\n      if (step != null) {\n        const stepSize = event.shiftKey ? shiftStep : step;\n        switch (event.key) {\n          case 'ArrowUp':\n            newValue = getNewValue(value, stepSize, 1, min, max);\n            break;\n          case 'ArrowRight':\n            newValue = getNewValue(value, stepSize, isRtl ? -1 : 1, min, max);\n            break;\n          case 'ArrowDown':\n            newValue = getNewValue(value, stepSize, -1, min, max);\n            break;\n          case 'ArrowLeft':\n            newValue = getNewValue(value, stepSize, isRtl ? 1 : -1, min, max);\n            break;\n          case 'PageUp':\n            newValue = getNewValue(value, shiftStep, 1, min, max);\n            break;\n          case 'PageDown':\n            newValue = getNewValue(value, shiftStep, -1, min, max);\n            break;\n          case 'Home':\n            newValue = min;\n            break;\n          case 'End':\n            newValue = max;\n            break;\n          default:\n            break;\n        }\n      } else if (marks) {\n        const maxMarksValue = marksValues[marksValues.length - 1];\n        const currentMarkIndex = marksValues.indexOf(value);\n        const decrementKeys = [isRtl ? 'ArrowRight' : 'ArrowLeft', 'ArrowDown', 'PageDown', 'Home'];\n        const incrementKeys = [isRtl ? 'ArrowLeft' : 'ArrowRight', 'ArrowUp', 'PageUp', 'End'];\n        if (decrementKeys.includes(event.key)) {\n          if (currentMarkIndex === 0) {\n            newValue = marksValues[0];\n          } else {\n            newValue = marksValues[currentMarkIndex - 1];\n          }\n        } else if (incrementKeys.includes(event.key)) {\n          if (currentMarkIndex === marksValues.length - 1) {\n            newValue = maxMarksValue;\n          } else {\n            newValue = marksValues[currentMarkIndex + 1];\n          }\n        }\n      }\n      if (newValue != null) {\n        changeValue(event, newValue);\n      }\n    }\n    otherHandlers?.onKeyDown?.(event);\n  };\n  (0, _utils.unstable_useEnhancedEffect)(() => {\n    if (disabled && sliderRef.current.contains(document.activeElement)) {\n      // This is necessary because Firefox and Safari will keep focus\n      // on a disabled element:\n      // https://codesandbox.io/p/sandbox/mui-pr-22247-forked-h151h?file=/src/App.js\n      // @ts-ignore\n      document.activeElement?.blur();\n    }\n  }, [disabled]);\n  if (disabled && active !== -1) {\n    setActive(-1);\n  }\n  if (disabled && focusedThumbIndex !== -1) {\n    setFocusedThumbIndex(-1);\n  }\n  const createHandleHiddenInputChange = otherHandlers => event => {\n    otherHandlers.onChange?.(event);\n    // this handles value change by Pointer or Touch events\n    // @ts-ignore\n    changeValue(event, event.target.valueAsNumber);\n  };\n  const previousIndex = React.useRef(undefined);\n  let axis = orientation;\n  if (isRtl && orientation === 'horizontal') {\n    axis += '-reverse';\n  }\n  const getFingerNewValue = ({\n    finger,\n    move = false\n  }) => {\n    const {\n      current: slider\n    } = sliderRef;\n    const {\n      width,\n      height,\n      bottom,\n      left\n    } = slider.getBoundingClientRect();\n    let percent;\n    if (axis.startsWith('vertical')) {\n      percent = (bottom - finger.y) / height;\n    } else {\n      percent = (finger.x - left) / width;\n    }\n    if (axis.includes('-reverse')) {\n      percent = 1 - percent;\n    }\n    let newValue;\n    newValue = percentToValue(percent, min, max);\n    if (step) {\n      newValue = roundValueToStep(newValue, step, min);\n    } else {\n      const closestIndex = findClosest(marksValues, newValue);\n      newValue = marksValues[closestIndex];\n    }\n    newValue = (0, _utils.clamp)(newValue, min, max);\n    let activeIndex = 0;\n    if (range) {\n      if (!move) {\n        activeIndex = findClosest(values, newValue);\n      } else {\n        activeIndex = previousIndex.current;\n      }\n\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = (0, _utils.clamp)(newValue, values[activeIndex - 1] || -Infinity, values[activeIndex + 1] || Infinity);\n      }\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index: activeIndex\n      });\n\n      // Potentially swap the index if needed.\n      if (!(disableSwap && move)) {\n        activeIndex = newValue.indexOf(previousValue);\n        previousIndex.current = activeIndex;\n      }\n    }\n    return {\n      newValue,\n      activeIndex\n    };\n  };\n  const handleTouchMove = (0, _utils.unstable_useEventCallback)(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    if (!finger) {\n      return;\n    }\n    moveCount.current += 1;\n\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    // @ts-ignore buttons doesn't not exists on touch event\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    const {\n      newValue,\n      activeIndex\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    focusThumb({\n      sliderRef,\n      activeIndex,\n      setActive\n    });\n    setValueState(newValue);\n    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {\n      setDragging(true);\n    }\n    if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n      handleChange(nativeEvent, newValue, activeIndex);\n    }\n  });\n  const handleTouchEnd = (0, _utils.unstable_useEventCallback)(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    setDragging(false);\n    if (!finger) {\n      return;\n    }\n    const {\n      newValue\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    setActive(-1);\n    if (nativeEvent.type === 'touchend') {\n      setOpen(-1);\n    }\n    if (onChangeCommitted) {\n      onChangeCommitted(nativeEvent, lastChangedValue.current ?? newValue);\n    }\n    touchId.current = undefined;\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n  });\n  const handleTouchStart = (0, _utils.unstable_useEventCallback)(nativeEvent => {\n    if (disabled) {\n      return;\n    }\n    // If touch-action: none; is not supported we need to prevent the scroll manually.\n    if (!doesSupportTouchActionNone()) {\n      nativeEvent.preventDefault();\n    }\n    const touch = nativeEvent.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const finger = trackFinger(nativeEvent, touchId);\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n      if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n        handleChange(nativeEvent, newValue, activeIndex);\n      }\n    }\n    moveCount.current = 0;\n    const doc = (0, _utils.unstable_ownerDocument)(sliderRef.current);\n    doc.addEventListener('touchmove', handleTouchMove, {\n      passive: true\n    });\n    doc.addEventListener('touchend', handleTouchEnd, {\n      passive: true\n    });\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = (0, _utils.unstable_ownerDocument)(sliderRef.current);\n    doc.removeEventListener('mousemove', handleTouchMove);\n    doc.removeEventListener('mouseup', handleTouchEnd);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n  }, [handleTouchEnd, handleTouchMove]);\n  React.useEffect(() => {\n    const {\n      current: slider\n    } = sliderRef;\n    slider.addEventListener('touchstart', handleTouchStart, {\n      passive: doesSupportTouchActionNone()\n    });\n    return () => {\n      slider.removeEventListener('touchstart', handleTouchStart);\n      stopListening();\n    };\n  }, [stopListening, handleTouchStart]);\n  React.useEffect(() => {\n    if (disabled) {\n      stopListening();\n    }\n  }, [disabled, stopListening]);\n  const createHandleMouseDown = otherHandlers => event => {\n    otherHandlers.onMouseDown?.(event);\n    if (disabled) {\n      return;\n    }\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    const finger = trackFinger(event, touchId);\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n      if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n        handleChange(event, newValue, activeIndex);\n      }\n    }\n    moveCount.current = 0;\n    const doc = (0, _utils.unstable_ownerDocument)(sliderRef.current);\n    doc.addEventListener('mousemove', handleTouchMove, {\n      passive: true\n    });\n    doc.addEventListener('mouseup', handleTouchEnd);\n  };\n  const trackOffset = valueToPercent(range ? values[0] : min, min, max);\n  const trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;\n  const getRootProps = (externalProps = {}) => {\n    const externalHandlers = (0, _extractEventHandlers.default)(externalProps);\n    const ownEventHandlers = {\n      onMouseDown: createHandleMouseDown(externalHandlers || {})\n    };\n    const mergedEventHandlers = {\n      ...externalHandlers,\n      ...ownEventHandlers\n    };\n    return {\n      ...externalProps,\n      ref: handleRef,\n      ...mergedEventHandlers\n    };\n  };\n  const createHandleMouseOver = otherHandlers => event => {\n    otherHandlers.onMouseOver?.(event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    setOpen(index);\n  };\n  const createHandleMouseLeave = otherHandlers => event => {\n    otherHandlers.onMouseLeave?.(event);\n    setOpen(-1);\n  };\n  const getThumbProps = (externalProps = {}) => {\n    const externalHandlers = (0, _extractEventHandlers.default)(externalProps);\n    const ownEventHandlers = {\n      onMouseOver: createHandleMouseOver(externalHandlers || {}),\n      onMouseLeave: createHandleMouseLeave(externalHandlers || {})\n    };\n    return {\n      ...externalProps,\n      ...externalHandlers,\n      ...ownEventHandlers\n    };\n  };\n  const getThumbStyle = index => {\n    return {\n      // So the non active thumb doesn't show its label on hover.\n      pointerEvents: active !== -1 && active !== index ? 'none' : undefined\n    };\n  };\n  let cssWritingMode;\n  if (orientation === 'vertical') {\n    cssWritingMode = isRtl ? 'vertical-rl' : 'vertical-lr';\n  }\n  const getHiddenInputProps = (externalProps = {}) => {\n    const externalHandlers = (0, _extractEventHandlers.default)(externalProps);\n    const ownEventHandlers = {\n      onChange: createHandleHiddenInputChange(externalHandlers || {}),\n      onFocus: createHandleHiddenInputFocus(externalHandlers || {}),\n      onBlur: createHandleHiddenInputBlur(externalHandlers || {}),\n      onKeyDown: createHandleHiddenInputKeyDown(externalHandlers || {})\n    };\n    const mergedEventHandlers = {\n      ...externalHandlers,\n      ...ownEventHandlers\n    };\n    return {\n      tabIndex,\n      'aria-labelledby': ariaLabelledby,\n      'aria-orientation': orientation,\n      'aria-valuemax': scale(max),\n      'aria-valuemin': scale(min),\n      name,\n      type: 'range',\n      min: parameters.min,\n      max: parameters.max,\n      step: parameters.step === null && parameters.marks ? 'any' : parameters.step ?? undefined,\n      disabled,\n      ...externalProps,\n      ...mergedEventHandlers,\n      style: {\n        ..._utils.visuallyHidden,\n        direction: isRtl ? 'rtl' : 'ltr',\n        // So that VoiceOver's focus indicator matches the thumb's dimensions\n        width: '100%',\n        height: '100%',\n        writingMode: cssWritingMode\n      }\n    };\n  };\n  return {\n    active,\n    axis: axis,\n    axisProps,\n    dragging,\n    focusedThumbIndex,\n    getHiddenInputProps,\n    getRootProps,\n    getThumbProps,\n    marks: marks,\n    open,\n    range,\n    rootRef: handleRef,\n    trackLeap,\n    trackOffset,\n    values,\n    getThumbStyle\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}